{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","onSearchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC1B,OACE,sBAAKC,UAAY,kDAAjB,UACA,qBAAKC,IAAG,+BAA0BF,EAA1B,iBAA6CG,IAAI,WACvD,gCACA,6BAAKL,IACL,4BAAIC,WCgBKK,EArBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAGjB,OACE,cAAC,WAAD,UAEEA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCGAC,EAbG,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eAClB,OACE,qBAAKT,UAAU,MAAf,SACE,uBAAOA,UAAU,oCACjBU,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCIHI,EAXA,SAACC,GACd,OACE,sBAAKC,MAAO,CAACC,SAAS,SAAUC,OAAO,kBAAmBC,OAAO,SAAjE,UACGJ,EAAMK,SADT,QCmBWC,E,kDApBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,8DAODC,EAAOC,GACvBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAIzB,OAAIG,KAAKJ,MAAMC,SACN,0DAEFG,KAAKX,MAAMK,a,GAhBMQ,aCsDbC,G,wDA/Cb,aAAe,IAAD,8BACZ,gBAkBFnB,eAAiB,SAACoB,GAChB,EAAKH,SAAS,CAACI,YAAaD,EAAME,OAAOC,SAlBzC,EAAKX,MAAQ,CACXjB,OAAQ,GACR0B,YAAa,IAJH,E,gEASO,IAAD,OAClBG,MAAM,8CACLC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UACfF,MAAK,SAAAG,GACN,OAAO,EAAKX,SAAS,CAACtB,OAAQiC,S,+BAUxB,IAAD,EACuBZ,KAAKJ,MAA5BjB,EADA,EACAA,OAAQ0B,EADR,EACQA,YACTQ,EAAiBlC,EAAOmC,QAAO,SAAAC,GACnC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASZ,EAAYW,kBAEvD,OAASrC,EAAOuC,OACZ,cAAC,WAAD,UACA,sBAAK3C,UAAU,KAAf,UACE,6CACA,cAAC,EAAD,CAAWS,eAAgBgB,KAAKhB,iBAChC,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUL,OAAQkC,aAPA,6C,GA9BdX,cCIHiB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d1d48ea5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = ({name, email, id}) => {\r\n  return (\r\n    <div className = \"tc bg-light-green dib br3 ma3 grow bw2 shadow-5\">\r\n    <img src={`https://robohash.org/${id}?size=200x200`} alt='robots'/>\r\n      <div>\r\n      <h3>{name}</h3>\r\n      <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React, {Fragment} from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n    {\r\n      robots.map((user, i) => {\r\n        return (\r\n          <Card \r\n          key={i} \r\n          id={robots[i].id} \r\n          name={robots[i].name} \r\n          email={robots[i].email} \r\n          />\r\n        );\r\n      })\r\n    }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({onSearchChange}) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input className=\"pa3 ba b--green bg-lightest-blue \"\r\n      type=\"search\" \r\n      placeholder=\"Search robots\" \r\n      onChange = {onSearchChange}\r\n      />\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{overflow:\"Scroll\", border:\"5px solid black\", height:\"500px\"}}>\r\n     { props.children};\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({hasError: true});\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Ooops. That is not good.</h1>\r\n    }\r\n    return this.props.children;\r\n  }\r\n  \r\n}\r\n\r\nexport default ErrorBoundary;","import React,{Component, Fragment } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => {\r\n      return response.json();\r\n    }).then(users => {\r\n      return this.setState({robots: users});\r\n    })\r\n    \r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({searchfield: event.target.value});\r\n    \r\n  }\r\n\r\n  render() {\r\n    const {robots, searchfield} = this.state;\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    })\r\n    return (!robots.length) ?  (<h1>Loading</h1>) :  (\r\n        <Fragment>\r\n        <div className=\"tc\">\r\n          <h1>Robofriends</h1>\r\n          <SearchBox onSearchChange={this.onSearchChange}/>\r\n          <Scroll>\r\n            <ErrorBoundary>\r\n              <CardList robots={filteredRobots}/>\r\n            </ErrorBoundary>\r\n          </Scroll>\r\n        </div>\r\n        </Fragment>\r\n      );\r\n\r\n  }\r\n  \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}